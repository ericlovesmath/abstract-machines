// OUTPUT: 10
(letrec (f x) 10 (f 5))

// OUTPUT: 10
(letrec (f x) (f x) 10)

// OUTPUT: 89
(letrec (fib a b n)
    (if (= n 0)
        a
        (fib b (+ a b) (- n 1)))
    (fib 1 1 10))

// OUTPUT: 89
(letrec (fib x)             ; With two calls
    (if (< x 2)
        1
        (+ (fib (- x 1)) (fib (- x 2))))
    (fib 10))

// OUTPUT: 3628800
(letrec (f x)               ; Specific test for letrec being strange on SECD
    (if (< x 1)
        1
        (* (f (- x 1)) x))
    (f 10))

// OUTPUT: 3628800
(letrec (f x)
    (if (< x 1)
        1
        (* (f (- x 1)) x))
    (f 10))

// OUTPUT: 0 :: 0 :: 0 :: 0 :: nil
(letrec (empty xs)
 (if (= xs nil)
   nil
   (cons 0 (empty (cdr xs))))
(empty [1 2 3 4]))

// OUTPUT: 4
(letrec (length xs)
 (if (= xs nil)
   0
   (+ 1 (length (cdr xs))))
(length [1 2 3 4]))
