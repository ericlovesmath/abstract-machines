// OUTPUT: 21
(let (compose f g)
  (lambda x (f (g x)))

  (let f (compose
    (lambda x (+ x 1))
    (lambda x (* x 2)))

  (f 10)))


// OUTPUT: 8 :: 2 :: nil
(let*
  (plus x y) (+ x y)
  (minus x y) (- x y)
  (dual switch) (if (= switch 0) plus minus)
[((dual 0) 5 3) ((dual 1) 5 3)])
